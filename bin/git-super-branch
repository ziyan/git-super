#!/bin/bash
set -e

SCRIPT=$(basename $0)
BRANCH=$1

function usage
{
    echo "Usage: ${SCRIPT} [branch]" >&2
    echo "       Branch and push all submodules in tree, e.g. ${SCRIPT} newbranch" >&2
    echo >&2
    exit 1
}

function fatal
{
    echo "${SCRIPT}: $(pwd): $1" >&2
    exit 1
}

function branch
{
    # checkout and update to latest
    git fetch || fatal "failed to fetch"
    git rev-parse --abbrev-ref "${BRANCH}" > /dev/null 2>&1 || git branch "${BRANCH}" || fatal "failed to create branch ${BRANCH}"
    git checkout --quiet "${BRANCH}" || fatal "failed to checkout ${BRANCH}"
    git push --set-upstream --quiet origin "${BRANCH}" > /dev/null 2>&1 || fatal "failed to push"

    # recurse
    git submodule foreach --quiet pwd | for DIR in $(cat -); do
        pushd "${DIR}" > /dev/null 2>&1
        branch
        popd > /dev/null 2>&1
    done
}

if [[ $# -gt 1 ]] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    usage
fi

# figure out the root
if [ -z "${GIT_SUPER_ROOT}" ]; then
    export GIT_SUPER_ROOT="$(git-super-root)"
fi

# figure out what branch to sync to
if [ -z "${BRANCH}" ]; then
    BRANCH=$(git rev-parse --abbrev-ref HEAD)
    if [ "${BRANCH}" == "HEAD" ]; then
        echo "${SCRIPT}: $(pwd): root of repository not on any branch"
        exit 1
    fi
fi

# recursively checkout all repository to latest branch
branch

